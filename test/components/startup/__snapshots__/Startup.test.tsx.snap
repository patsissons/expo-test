// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components Startup renders loaded mode without crashing: loading 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <StartupComponent
    actions={
      Object {
        "context": Object {
          "loadEnv": [Function],
          "loadLocale": [Function],
        },
        "demo": Object {
          "decrement": [Function],
          "increment": [Function],
        },
        "navigation": Object {
          "goBack": [Function],
          "toLogin": [Function],
          "toMain": [Function],
        },
      }
    }
    context={
      Object {
        "env": Object {},
        "locale": "test",
        "localization": Object {},
      }
    }
    size="large"
    state={
      Object {
        "context": Object {
          "env": Object {},
          "locale": "test",
          "localization": Object {},
        },
      }
    }
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): undefined,
  Symbol(enzyme.__nodes__): Array [
    undefined,
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`components Startup renders loading mode without crashing: loading 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <StartupComponent
    actions={
      Object {
        "context": Object {
          "loadEnv": [Function],
          "loadLocale": [Function],
        },
        "demo": Object {
          "decrement": [Function],
          "increment": [Function],
        },
        "navigation": Object {
          "goBack": [Function],
          "toLogin": [Function],
          "toMain": [Function],
        },
      }
    }
    context={Object {}}
    size="large"
    state={
      Object {
        "context": Object {},
      }
    }
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        false,
        <ActivityIndicator
          animating={true}
          color="#999999"
          hidesWhenStopped={true}
          size="large"
        />,
      ],
      "style": Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "flex": 1,
        "justifyContent": "center",
      },
    },
    "ref": null,
    "rendered": Array [
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "animating": true,
          "color": "#999999",
          "hidesWhenStopped": true,
          "size": "large",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          false,
          <ActivityIndicator
            animating={true}
            color="#999999"
            hidesWhenStopped={true}
            size="large"
          />,
        ],
        "style": Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "flex": 1,
          "justifyContent": "center",
        },
      },
      "ref": null,
      "rendered": Array [
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "animating": true,
            "color": "#999999",
            "hidesWhenStopped": true,
            "size": "large",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
