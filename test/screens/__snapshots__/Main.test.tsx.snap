// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`screens Main renders without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MainScreen
    actions={
      Object {
        "context": Object {
          "loadEnv": [Function],
          "loadLocale": [Function],
        },
        "demo": Object {
          "decrement": [Function],
          "increment": [Function],
        },
        "navigation": Object {
          "goBack": [Function],
          "toLogin": [Function],
          "toMain": [Function],
        },
      }
    }
    context={
      Object {
        "env": Object {
          "RELEASE": "local",
        },
        "locale": "en",
        "localization": Object {
          "CurrentStateIs": "Current state is",
          "Increment": "Increment",
          "IncrementCount": "Increment Count",
          "Login": "Login",
          "LoginScreen": "Login Screen",
          "MainScreen": "Main Screen",
        },
      }
    }
    state={
      Object {
        "demo": Object {
          "count": 0,
        },
      }
    }
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Button
          onPress={[Function]}
          title="Login"
        >
          Login
        </Button>,
        <Connect(DemoComponent) />,
      ],
      "style": Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "flex": 1,
        "justifyContent": "center",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Login",
          "onPress": [Function],
          "title": "Login",
        },
        "ref": null,
        "rendered": "Login",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Button
            onPress={[Function]}
            title="Login"
          >
            Login
          </Button>,
          <Connect(DemoComponent) />,
        ],
        "style": Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "flex": 1,
          "justifyContent": "center",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Login",
            "onPress": [Function],
            "title": "Login",
          },
          "ref": null,
          "rendered": "Login",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
